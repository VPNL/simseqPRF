function params = displayParams%% % CODE TO SAVE GAMMA TABLE% % load in a measurement made by Akshay using mgl on Aug 31, 2020.% load('0012_oban_200831.mat')% % % % use gammaTable 1, which is the powerlaw fit to the measurements% % replicate to 256 x 3 for RGB (assuming 8 bits)% gamma = calib.table*[1 1 1];% % integers for lookup table% gammaTable = round(gamma * 255);% % % where to save?% pth = fullfile(simseqRootPath,'stimulus', 'stim_mri','calibration');% % save(fullfile(pth,'gamma'), 'gamma', 'gammaTable');%% % debug stuff% maxLevel = max(calib.uncorrected.luminance);% inputV   = calib.uncorrected.luminance(1:end-1);% vals     = calib.uncorrected.outputValues(1:end-1);% % displayRange    = range(vals);% displayBaseline = min(vals);% % vals = (vals - displayBaseline) / displayRange;% inputV = inputV/maxLevel;% % g = fittype('x^g');% fittedmodel  = fit(inputV',vals',g);% displayGamma = fittedmodel.g;% gammaTable1 = ((([0:maxLevel]'/maxLevel))).^(1/fittedmodel.g); %#ok<NBRAK>% % gammaFit = fittedmodel([0:maxLevel]/maxLevel); %#ok<NBRAK>% % cdm2 = displayRange*(screenval/maxLevel).^(1/displayGamma);% % figure;% plot(inputV, vals, '.', [0:maxLevel]/maxLevel, gammaFit, '--');% legend('Measures', 'Gamma model');% title(sprintf('Gamma model x^{%.2f}', displayGamma));% Critical parametersparams.numPixels    = [1920 1080];params.dimensions   = [104 58.5]; % cmparams.distance     = 265; % cmparams.frameRate    = 60;params.cmapDepth    = 8;params.screenNumber = 1;% Descriptive parametersparams.position = 'CNI Projector with handplaced mirror';params.stereoFlag = 0;% parameters which can make programming the display easierparams.flipLR = 1;params.flipUD = 1;